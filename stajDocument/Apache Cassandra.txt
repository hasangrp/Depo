Apache Cassandra
Apache tarafýndan geliþtirilen açýk kaynaklý, yüksek ölçeklenebilirliðe sahip ve yüksek performanslý  NoSQL  veritabaný mimarisi yapýsýnda olan daðýtýk bir veritabaný sistemidir. Ýlk olarak Amazon’un Dynamo ve Google’ýn Bigtable veri tabanlarý temel alýnarak Facebook tarafýndan geliþtirilmiþtir. Facebook 2009 da Cassandra’yý  açýk kaynak olarak açýp Apache kuruluþuna devretmiþtir.  

Kapasitesi oldukça yüksek olan Cassandra petabaytlarca veriyi tutabilir. Çoklu veri merkezlerinde ya da bulut ortamýnda bulunan yapýsal veya yapýsal olmayan verileri yönetmek için oldukça iyi bir sistemdir. Esnek, dinamik ve hýzlý cevap süresine sahiptir. Yüzde seksenlere varan veri sýkýþtýrma eteneðine sahiptir. Güçlü memory cache yazýlýmlarýnalan ihtiyacý ortadan kaldýrýr. SQL kullanýmýna oldukça benzeyen ve öðrenilmesi kolay olan CQL dili ile sorgulama yapar. Platform ve dil desteði vardýr. Cassandra’yý çalýþtýrmak için özel olarak tasarlanmýþ yazýlým ve donanýmlara ihtiyaç yoktur.Cassandra’nýn saðladýðý kolaylýklar ve faydalar

Elastik ölçeklenebilirlik (Elastic scalability) :  Ýhtiyaç duyulduðu herhangi bir zamanda kapasiteyi kolayca artýrmaya izin verir.
Sürekli aktif (Always on architecture) : Geleneksel master/slave RDBMS ya da NoSQL çözümleri gibi esas bileþendeki bir hatadan (single point of failure ) dolayý sistemin çökmesi söz konusu deðildir. Çünkü böyle bir mimarisi yoktur. Sürekli kullanýlabilirlik esasýna dayanýr ve asla uygulamalarýn çökmesini göze almaz.
Doðrusal ölçekli hýzlý performans (Fast linear-scale performance) :  Doðrusal ölçeklenebilirlik yapýsý sayesinde cevap süresi saniyenin altýndadýr. Cevap süresini beklenen süre içinde tutmak için sonuçlarý iki nodetan, dört nodetan ya da bu þekilde mümkün olan nodelardan elde eder.
Esnek veri depolama (Flexible data storage) : Tüm veri formatlarýný (yapýsal, yarý-yapýsal, yapýsal olmayan) kolayca barýndýrýr. Günümüzdeki modern uygulamalar ile çalýþýr. Ayný zamanda  dinamik olarak verinin ihtiyaç duyduðu yapýsal deðiþiklikleri yaparak barýndýrýr.
Kolay veri daðýtýmý (Easy data distribution) : Verinin ihtiyaç duyulduðu kadar çoklu veri merkezlerine, bulut ortamlarýna ya da baþka ortamlara daðýtýlmasý ve kopyalanmasý için maksimum esneklik saðlar. Herhangi bir node üzerinde yapýlan okuma ve yazma iþlemindeki deðiþiklikler otomatik olarak cluster içindeki tüm nodelara yansýtýlýr.
Operasyonel basitlik (Operational simplicity): Cluster içindeki tüm nodelar aynýdýr. Karmaþýk bir konfigurasyon yapýsý yoktur. Yönetim iþlemleri oldukça basitleþtirilmiþtir.
Transaction desteði (Transaction support) : Cassandra transaction içinde  “AID” (atomicity, isolated, durability) özelliklerini garanti eder. Tutarlýlýk ise ayarlanabilir.
Cassandra Mimarisi
Cassandra daðýtýk veritabaný mimarisi üzerine kurulmuþtur. Bir cluster ve bu clusterý oluþtruan bir veya daha fazla nodelardan oluþur. Cluster birbirine baðlý sunuculardan oluþur. node ise bir veritabaný sunucusudur.  Dolayýsýyla veritabaný birden fazla sunucuda saklanýr. Nodelarda saklanan verilerin kopyasý baþka nodelarda saklanabilmektedir. Tüm nodelarýn kopyasýnýn olmasý zorunluluðu yoktur.

Cassandra peer-to-peer daðýtýk mimariye sahiptir. Bu da çok daha iyi, kurulumu ve bakýmý kolay bir yapý oluþturur. Cassandra da tüm nodelar aynýdýr. Bir master node konsepti yoktur. Tüm nodelar birbirleriyle iletiþim halindedir ve iletiþim için gossip protokolunu kullanmaktadýr.
Veri Daðýtma ve Kopyalama
Cassandra veriyi otomotaik olarak cluster ya da “ring” içindeki nodelara daðýtýr.  Developerlarýn ya da Cassandra adminlerinin cluster içinde veriyi daðýtmak için herhangi bir geliþtirme yapmasýna gerek yoktur.  Veri transparan parçalar halinde nodelara ya rastgele seçilerek ya da sýralý bir þekilde gönderilir. Varsayýlan olarak rasgele seçilir.

Cassandra ayný zamanda bir Cassandra “ring” i içerisinde fazladan kopya tutmak için gömülü ve özelleþtirileilir kopyalama saðlar. Bunun anlamý bir node down olduðunda bu nodeun verileri cluster içindeki diðer makinelerde durmaya devam eder.
Çoklu-Veri Merkezi ve Bulut Desteði
Cassandra çoklu-data merkezlerinde ve bulut platformlarýndan veri kopyalama  iþlemlerinde önde gelen ve baþarýsý kabul görmüþ bir NoSQL veritabanýdýr. Bir developer ya da admin çoklu-data merkezlerini ya da melez bulut sistemlerini içeren bir cluster oluþturabilir.

Yeni bir veritabaný (keyspace) oluþtururken ya da çaðýrýrken kullanýcý basit bir þekilde tek komutla hangi veri merkezlerinden ya da bulut ortamýndan veriyi çekeceðini belirtir. bundan sonrasýný Cassandra otomatik olarak ilerletir ve bakýmýný kendi halleder.

Veri Okuma ve Yazma
Cassandra veri okuma ve yazma iþlemleri sýrasýnda “location independent” mimarisini kullanýr. Bunun anlamý cluster içindeki bir node okunurken ya da yazýlýrken herhangi bir yere yaz/oku dizayný(read/write-anywhere design) aktif edilir.

Cassandra’ya veri yazýlýrken, tüm verinin dayanýklýlýðýný ve güvenliðini saðlamak için veri ilk olarak bir commit loga yazýlýr. Veri in-memory olarak memtable adý verilen yapýda saklanýr. Memtable dolduðunda veri diske flush edilerek sstable (sorted strings table)  yapýsýnda saklanýr.

Eðer belirli bir veri kümesinden sorumlu olan bir veya daha fazla node down olursa, veri basitçe baþka bir nodea geçici olarak yazýlýr. Bu sorumlu nodelar ilk kez tekrar geri geldiðinde otomatik olarak yönettikleri veriyi back up larýnýn olduðu nodelardan alýp veriyi güncellerler. Böylece veri kaybý ortadan kalkmýþ olur.

Veri okuma cluster içinde paralel olarak yapýlýr. Kullanýcý veriyi herhangi bir node tan ister. Kullanýcýn sorgusu gerekli veriye sahip nodelardan veri alarak cevaplandýrýlýr. Eðer istenen veriye sahip node down olursa Cassandra verinin kopyasýna sahip olan diðer nodelardan veriyi çeker. 